{{- if and .Values.mysqlOperator.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "mysql-operator.name" . }}
  namespace: {{ template "mysql-operator.namespace" . }}
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "mysql-operator.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app: {{ template "mysql-operator.name" . }}
    release: {{ template "mysql-operator.name" . }}
spec:
  replicas: {{ .Values.mysqlOperator.replicas }}
  serviceName: {{ template "mysql-operator.name" . }}-orc
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "mysql-operator.name" . }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{ template "mysql-operator.name" . }}
      release: {{ template "mysql-operator.name" . }}
  template:
    metadata:
      labels:
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: {{ template "mysql-operator.name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ template "mysql-operator.name" . }}
        release: {{ template "mysql-operator.name" . }}
{{- if .Values.mysqlOperator.statefulSet.annotations }}
      annotations:
        {{- toYaml .Values.mysqlOperator.statefulSet.annotations | nindent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "mysql-operator.name" . }}
      containers:
        - name: operator
          image: "{{ .Values.mysqlOperator.image.repository }}:{{ .Values.mysqlOperator.image.tag }}"
          imagePullPolicy: "{{ .Values.mysqlOperator.image.pullPolicy }}"
          env:
            - name: ORC_TOPOLOGY_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "mysql-operator.name" . }}-orc
                  key: TOPOLOGY_USER
            - name: ORC_TOPOLOGY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mysql-operator.name" . }}-orc
                  key: TOPOLOGY_PASSWORD
          args:
            - --leader-election-namespace={{ template "mysql-operator.namespace" . }}
            # connect to orchestrator on localhost
            - --orchestrator-uri=http://127.0.0.1:3000/api
            - --sidecar-image={{ .Values.mysqlOperator.sidecar.image.repository }}:{{ .Values.mysqlOperator.sidecar.image.tag }}
            {{- if .Values.mysqlOperator.extraArgs }}
{{ toYaml .Values.mysqlOperator.extraArgs | indent 12 }}
            {{- end }}
        - name: orchestrator
          image: "{{ .Values.mysqlOperator.orchestrator.image.repository }}:{{ .Values.mysqlOperator.orchestrator.image.tag }}"
          imagePullPolicy: "{{ .Values.mysqlOperator.orchestrator.image.pullPolicy }}"
          ports:
            - containerPort: 3000
              name: web
              protocol: TCP
            - containerPort: 10008
              name: raft
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - prefix: ORC_
              secretRef:
                name: {{ template "mysql-operator.name" . }}-orc
          volumeMounts:
            - name: data
              mountPath: /var/lib/orchestrator/
            - name: config
              mountPath: /templates/
          livenessProbe:
            timeoutSeconds: {{ .Values.mysqlOperator.livenessProbeTimeout }}
            initialDelaySeconds: {{ .Values.mysqlOperator.livenessProbeInitialDelay }}
            httpGet:
              path: /api/lb-check
              port: 3000
          # https://github.com/github/orchestrator/blob/master/docs/raft.md#proxy-healthy-raft-nodes
          readinessProbe:
            timeoutSeconds: {{ .Values.mysqlOperator.readinessProbeTimeout }}
            initialDelaySeconds: {{ .Values.mysqlOperator.readinessProbeInitialDelay }}
            httpGet:
              path: /api/raft-health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: {{ template "mysql-operator.name" . }}-orc
      # security context to mount corectly the volume for orc
      securityContext:
        fsGroup: {{ .Values.mysqlOperator.fsGroup }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          {{ toYaml .Values.mysqlOperator.persistentVolume.accessModes | indent 4 }}
        resources:
          requests:
            storage: {{ .Values.mysqlOperator.persistentVolume.size }}
{{- end }}
