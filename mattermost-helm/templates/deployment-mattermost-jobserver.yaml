{{- if .Values.global.features.jobserver.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mattermost-enterprise-edition.jobserver.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "mattermost-enterprise-edition.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: {{ .Values.global.features.jobserver.name }}
    helm.sh/chart:  {{ include "mattermost-enterprise-edition.chart" . }}
spec:
  replicas: {{ .Values.global.features.jobserver.replicaCount }}
  {{- with .Values.global.features.jobserver.strategy }}
  strategy:
    {{- . | toYaml | nindent 4 }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.global.features.jobserver.revisionHistoryLimit }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mattermost-enterprise-edition.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/component: {{ .Values.global.features.jobserver.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mattermost-enterprise-edition.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/component: {{ .Values.global.features.jobserver.name }}
        helm.sh/chart: {{ include "mattermost-enterprise-edition.chart" . }}
    spec:
      initContainers:
      - name: "init-mattermost-app"
        image: "appropriate/curl:latest"
        imagePullPolicy: "IfNotPresent"
        command: [
          "sh",
          "-c",
          "until curl --max-time 5 http://{{ include "mattermost-enterprise-edition.fullname" . }}.{{ .Release.Namespace }}:{{ .Values.mattermostApp.service.internalPort }}/api/v4/system/ping ; do echo waiting for Mattermost App come up; sleep 5; done; echo init-mattermost-app finished"
        ]
      containers:
      - name: {{ include "mattermost-enterprise-edition.name" . }}-jobserver
        image: "{{ .Values.mattermostApp.image.repository }}:{{ .Values.mattermostApp.image.tag }}"
        imagePullPolicy: {{ .Values.mattermostApp.image.pullPolicy }}
        command: ["mattermost", "jobserver"]
        volumeMounts:
        - mountPath: /mattermost/config/config.json
          name: config-json
          subPath: config.json
        - mountPath: /mattermost/mattermost.mattermost-license
          name: mattermost-license
          subPath: mattermost.mattermost-license
      volumes:
      - name: config-json
        configMap:
          name: {{ include "mattermost-enterprise-edition.fullname" . }}-init-config-json
          items:
          - key: config.json
            path: config.json
      - name: mattermost-license
        secret:
          secretName: {{ include "mattermost-enterprise-edition.fullname" . }}-mattermost-license
{{- end -}}
